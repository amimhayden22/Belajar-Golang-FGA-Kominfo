package main

import (
	"fmt"
	"time"
)

type MyCallBack func(num int) bool

func main() {

	var result int = func(num1 int, num2 int) int {
		return num1 + num2
	}(20, 30)
	
	// fmt.Println(result)
	_ = result

	// fmt.Println(MultipleReturnValueFunction())

	// fmt.Printf(MultipleReturnValueFunction())

	word, randomNumber, m := MultipleReturnValueFunction()

	_, _, _ = word, randomNumber, m 

	// fmt.Printf("Word => %s, randomNumber => %d\n", word, randomNumber)

	isFoundV1 := FindNumberInSliceV1(10, []int{10, 20, 30, 40, 70})
	isFoundV2 := FindNumberInSliceV2(10, 20, 30, 40, 70)

	// fmt.Println(isFoundV1, isFoundV2)

	_, _ = isFoundV1, isFoundV2

	// fmt.Println(CountRountInString("Mânca"))

	strResult, totalRunes := CountRountInString("Mânca")

	_, _ = strResult, totalRunes

	// fmt.Printf("strResult => %s, totalRunes => %d\n", strResult, totalRunes)

	// var nums []int = []int{10, 30, 20, 40, 11}

	// var validator func(num int, findEven bool) bool = func(num int, findEven bool) bool{
	// 	if findEven {
	// 		if num%2 == 0 {
	// 			return true
	// 		}
	// 		return false
	// 	}
	// 	return num%2 != 0
	// }

	// isOddOrEvenNumber(nums, true, validator)

	// SleepAndPrint(2, func ()  {
	// 	fmt.Println("Aku sudah bangun tidur selama 2 detik")
	// })

	// SleepAndPrint(5, func ()  {
	// 	fmt.Println("Apa kabarmu?")
	// })
}

func SleepAndPrint(t int, log func())  {
	time.Sleep(time.Second * time.Duration(t))

	log()
}

func isOddOrEvenNumber(
	numbers []int, 
	isEven bool, 
	oddOrEventValidator func(num int, findEven bool) bool,
	)  {
	
	for _, num := range numbers {
		if isEven == true {
			if oddOrEventValidator(num, isEven) {
				fmt.Printf("%d is an even number\n", num)
			}else{
				if !oddOrEventValidator(num, isEven){
					fmt.Printf("%d is an odd number\n", num)
				}
			}
		}
	}
}

func CountRountInString(str string) (strResult string, totalRunes int) {
	
	result := []rune(str)

	strResult = str

	totalRunes = len(result)
	
	return
}

func FindNumberInSliceV1(searchNumber int, numbers []int) bool {

	for _, eachNumber := range numbers {
		if searchNumber == eachNumber {
			return true
		}
	}

	return false
}

func FindNumberInSliceV2(searchNumber int, numbers ...int) bool {
	// fmt.Printf("Numbers => %#v\n", numbers)
	for _, eachNumber := range numbers {
		if searchNumber == eachNumber {
			return true
		}
	}

	return false
}

func MultipleReturnValueFunction() (string, int, map[string]int) {

	var greetings string = "Hello World!"

	var randomNumber int = 23

	var m map[string]int = map[string]int{}

	return greetings, randomNumber, m
}